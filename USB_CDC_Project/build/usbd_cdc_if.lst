ARM GAS  /tmp/cc9Epf8G.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_cdc_if.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.CDC_DeInit_FS,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	CDC_DeInit_FS:
  23              	.LFB67:
  24              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /**
   2:Src/usbd_cdc_if.c ****   ******************************************************************************
   3:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   4:Src/usbd_cdc_if.c ****   * @version        : v2.0_Cube
   5:Src/usbd_cdc_if.c ****   * @brief          : Usb device for Virtual Com Port.
   6:Src/usbd_cdc_if.c ****   ******************************************************************************
   7:Src/usbd_cdc_if.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_cdc_if.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_cdc_if.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_cdc_if.c ****   * inserted by the user or by software development tools
  11:Src/usbd_cdc_if.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_cdc_if.c ****   *
  13:Src/usbd_cdc_if.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/usbd_cdc_if.c ****   * All rights reserved.
  15:Src/usbd_cdc_if.c ****   *
  16:Src/usbd_cdc_if.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_cdc_if.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_cdc_if.c ****   *
  19:Src/usbd_cdc_if.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_cdc_if.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_cdc_if.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_cdc_if.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_cdc_if.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_cdc_if.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_cdc_if.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_cdc_if.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_cdc_if.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_cdc_if.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_cdc_if.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbd_cdc_if.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_cdc_if.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usbd_cdc_if.c ****   *    this license. 
  33:Src/usbd_cdc_if.c ****   *
  34:Src/usbd_cdc_if.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
ARM GAS  /tmp/cc9Epf8G.s 			page 2


  35:Src/usbd_cdc_if.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_cdc_if.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_cdc_if.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_cdc_if.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_cdc_if.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_cdc_if.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_cdc_if.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_cdc_if.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_cdc_if.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_cdc_if.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_cdc_if.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_cdc_if.c ****   *
  47:Src/usbd_cdc_if.c ****   ******************************************************************************
  48:Src/usbd_cdc_if.c ****   */
  49:Src/usbd_cdc_if.c **** 
  50:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  52:Src/usbd_cdc_if.c **** 
  53:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  54:Src/usbd_cdc_if.c **** 
  55:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  56:Src/usbd_cdc_if.c **** 
  57:Src/usbd_cdc_if.c **** /* Private typedef -----------------------------------------------------------*/
  58:Src/usbd_cdc_if.c **** /* Private define ------------------------------------------------------------*/
  59:Src/usbd_cdc_if.c **** /* Private macro -------------------------------------------------------------*/
  60:Src/usbd_cdc_if.c **** 
  61:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PV */
  62:Src/usbd_cdc_if.c **** /* Private variables ---------------------------------------------------------*/
  63:Src/usbd_cdc_if.c **** 
  64:Src/usbd_cdc_if.c **** /* USER CODE END PV */
  65:Src/usbd_cdc_if.c **** 
  66:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  67:Src/usbd_cdc_if.c ****   * @brief Usb device library.
  68:Src/usbd_cdc_if.c ****   * @{
  69:Src/usbd_cdc_if.c ****   */
  70:Src/usbd_cdc_if.c **** 
  71:Src/usbd_cdc_if.c **** /** @addtogroup USBD_CDC_IF
  72:Src/usbd_cdc_if.c ****   * @{
  73:Src/usbd_cdc_if.c ****   */
  74:Src/usbd_cdc_if.c **** 
  75:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_TypesDefinitions USBD_CDC_IF_Private_TypesDefinitions
  76:Src/usbd_cdc_if.c ****   * @brief Private types.
  77:Src/usbd_cdc_if.c ****   * @{
  78:Src/usbd_cdc_if.c ****   */
  79:Src/usbd_cdc_if.c **** 
  80:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  81:Src/usbd_cdc_if.c **** 
  82:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */
  83:Src/usbd_cdc_if.c **** 
  84:Src/usbd_cdc_if.c **** /**
  85:Src/usbd_cdc_if.c ****   * @}
  86:Src/usbd_cdc_if.c ****   */
  87:Src/usbd_cdc_if.c **** 
  88:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Defines USBD_CDC_IF_Private_Defines
  89:Src/usbd_cdc_if.c ****   * @brief Private defines.
  90:Src/usbd_cdc_if.c ****   * @{
  91:Src/usbd_cdc_if.c ****   */
ARM GAS  /tmp/cc9Epf8G.s 			page 3


  92:Src/usbd_cdc_if.c **** 
  93:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  94:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  95:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  96:Src/usbd_cdc_if.c **** #define APP_RX_DATA_SIZE  1000
  97:Src/usbd_cdc_if.c **** #define APP_TX_DATA_SIZE  1000
  98:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  99:Src/usbd_cdc_if.c **** 
 100:Src/usbd_cdc_if.c **** /**
 101:Src/usbd_cdc_if.c ****   * @}
 102:Src/usbd_cdc_if.c ****   */
 103:Src/usbd_cdc_if.c **** 
 104:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Macros USBD_CDC_IF_Private_Macros
 105:Src/usbd_cdc_if.c ****   * @brief Private macros.
 106:Src/usbd_cdc_if.c ****   * @{
 107:Src/usbd_cdc_if.c ****   */
 108:Src/usbd_cdc_if.c **** 
 109:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
 110:Src/usbd_cdc_if.c **** 
 111:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
 112:Src/usbd_cdc_if.c **** 
 113:Src/usbd_cdc_if.c **** /**
 114:Src/usbd_cdc_if.c ****   * @}
 115:Src/usbd_cdc_if.c ****   */
 116:Src/usbd_cdc_if.c **** 
 117:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Variables USBD_CDC_IF_Private_Variables
 118:Src/usbd_cdc_if.c ****   * @brief Private variables.
 119:Src/usbd_cdc_if.c ****   * @{
 120:Src/usbd_cdc_if.c ****   */
 121:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
 122:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
 123:Src/usbd_cdc_if.c **** /** Received data over USB are stored in this buffer      */
 124:Src/usbd_cdc_if.c **** uint8_t UserRxBufferFS[APP_RX_DATA_SIZE];
 125:Src/usbd_cdc_if.c **** 
 126:Src/usbd_cdc_if.c **** /** Data to send over USB CDC are stored in this buffer   */
 127:Src/usbd_cdc_if.c **** uint8_t UserTxBufferFS[APP_TX_DATA_SIZE];
 128:Src/usbd_cdc_if.c **** 
 129:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 130:Src/usbd_cdc_if.c **** 
 131:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 132:Src/usbd_cdc_if.c **** 
 133:Src/usbd_cdc_if.c **** /**
 134:Src/usbd_cdc_if.c ****   * @}
 135:Src/usbd_cdc_if.c ****   */
 136:Src/usbd_cdc_if.c **** 
 137:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables USBD_CDC_IF_Exported_Variables
 138:Src/usbd_cdc_if.c ****   * @brief Public variables.
 139:Src/usbd_cdc_if.c ****   * @{
 140:Src/usbd_cdc_if.c ****   */
 141:Src/usbd_cdc_if.c **** 
 142:Src/usbd_cdc_if.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
 143:Src/usbd_cdc_if.c **** 
 144:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 145:Src/usbd_cdc_if.c **** 
 146:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 147:Src/usbd_cdc_if.c **** 
 148:Src/usbd_cdc_if.c **** /**
ARM GAS  /tmp/cc9Epf8G.s 			page 4


 149:Src/usbd_cdc_if.c ****   * @}
 150:Src/usbd_cdc_if.c ****   */
 151:Src/usbd_cdc_if.c **** 
 152:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_FunctionPrototypes USBD_CDC_IF_Private_FunctionPrototypes
 153:Src/usbd_cdc_if.c ****   * @brief Private functions declaration.
 154:Src/usbd_cdc_if.c ****   * @{
 155:Src/usbd_cdc_if.c ****   */
 156:Src/usbd_cdc_if.c **** 
 157:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void);
 158:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void);
 159:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length);
 160:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* pbuf, uint32_t *Len);
 161:Src/usbd_cdc_if.c **** 
 162:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 163:Src/usbd_cdc_if.c **** 
 164:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 165:Src/usbd_cdc_if.c **** 
 166:Src/usbd_cdc_if.c **** /**
 167:Src/usbd_cdc_if.c ****   * @}
 168:Src/usbd_cdc_if.c ****   */
 169:Src/usbd_cdc_if.c **** 
 170:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_FS =
 171:Src/usbd_cdc_if.c **** {
 172:Src/usbd_cdc_if.c ****   CDC_Init_FS,
 173:Src/usbd_cdc_if.c ****   CDC_DeInit_FS,
 174:Src/usbd_cdc_if.c ****   CDC_Control_FS,
 175:Src/usbd_cdc_if.c ****   CDC_Receive_FS
 176:Src/usbd_cdc_if.c **** };
 177:Src/usbd_cdc_if.c **** 
 178:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 179:Src/usbd_cdc_if.c **** /**
 180:Src/usbd_cdc_if.c ****   * @brief  Initializes the CDC media low layer over the FS USB IP
 181:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 182:Src/usbd_cdc_if.c ****   */
 183:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void)
 184:Src/usbd_cdc_if.c **** {
 185:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 186:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 187:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 188:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 189:Src/usbd_cdc_if.c ****   return (USBD_OK);
 190:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 191:Src/usbd_cdc_if.c **** }
 192:Src/usbd_cdc_if.c **** 
 193:Src/usbd_cdc_if.c **** /**
 194:Src/usbd_cdc_if.c ****   * @brief  DeInitializes the CDC media low layer
 195:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 196:Src/usbd_cdc_if.c ****   */
 197:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void)
 198:Src/usbd_cdc_if.c **** {
  25              		.loc 1 198 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
 199:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 4 */
 200:Src/usbd_cdc_if.c ****   return (USBD_OK);
ARM GAS  /tmp/cc9Epf8G.s 			page 5


 201:Src/usbd_cdc_if.c ****   /* USER CODE END 4 */
 202:Src/usbd_cdc_if.c **** }
  30              		.loc 1 202 0
  31 0000 0020     		movs	r0, #0
  32 0002 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE67:
  36              		.section	.text.CDC_Control_FS,"ax",%progbits
  37              		.align	1
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	CDC_Control_FS:
  44              	.LFB68:
 203:Src/usbd_cdc_if.c **** 
 204:Src/usbd_cdc_if.c **** /**
 205:Src/usbd_cdc_if.c ****   * @brief  Manage the CDC class requests
 206:Src/usbd_cdc_if.c ****   * @param  cmd: Command code
 207:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 208:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 209:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 210:Src/usbd_cdc_if.c ****   */
 211:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
 212:Src/usbd_cdc_if.c **** {
  45              		.loc 1 212 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50              	.LVL0:
 213:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 5 */
 214:Src/usbd_cdc_if.c ****   switch(cmd)
 215:Src/usbd_cdc_if.c ****   {
 216:Src/usbd_cdc_if.c ****     case CDC_SEND_ENCAPSULATED_COMMAND:
 217:Src/usbd_cdc_if.c **** 
 218:Src/usbd_cdc_if.c ****     break;
 219:Src/usbd_cdc_if.c **** 
 220:Src/usbd_cdc_if.c ****     case CDC_GET_ENCAPSULATED_RESPONSE:
 221:Src/usbd_cdc_if.c **** 
 222:Src/usbd_cdc_if.c ****     break;
 223:Src/usbd_cdc_if.c **** 
 224:Src/usbd_cdc_if.c ****     case CDC_SET_COMM_FEATURE:
 225:Src/usbd_cdc_if.c **** 
 226:Src/usbd_cdc_if.c ****     break;
 227:Src/usbd_cdc_if.c **** 
 228:Src/usbd_cdc_if.c ****     case CDC_GET_COMM_FEATURE:
 229:Src/usbd_cdc_if.c **** 
 230:Src/usbd_cdc_if.c ****     break;
 231:Src/usbd_cdc_if.c **** 
 232:Src/usbd_cdc_if.c ****     case CDC_CLEAR_COMM_FEATURE:
 233:Src/usbd_cdc_if.c **** 
 234:Src/usbd_cdc_if.c ****     break;
 235:Src/usbd_cdc_if.c **** 
 236:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 237:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 238:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
ARM GAS  /tmp/cc9Epf8G.s 			page 6


 239:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 240:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 241:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 242:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 243:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 244:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
 245:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 246:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 247:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */
 248:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
 249:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 250:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 251:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 252:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 253:Src/usbd_cdc_if.c ****     case CDC_SET_LINE_CODING:
 254:Src/usbd_cdc_if.c **** 
 255:Src/usbd_cdc_if.c ****     break;
 256:Src/usbd_cdc_if.c **** 
 257:Src/usbd_cdc_if.c ****     case CDC_GET_LINE_CODING:
 258:Src/usbd_cdc_if.c **** 
 259:Src/usbd_cdc_if.c ****     break;
 260:Src/usbd_cdc_if.c **** 
 261:Src/usbd_cdc_if.c ****     case CDC_SET_CONTROL_LINE_STATE:
 262:Src/usbd_cdc_if.c **** 
 263:Src/usbd_cdc_if.c ****     break;
 264:Src/usbd_cdc_if.c **** 
 265:Src/usbd_cdc_if.c ****     case CDC_SEND_BREAK:
 266:Src/usbd_cdc_if.c **** 
 267:Src/usbd_cdc_if.c ****     break;
 268:Src/usbd_cdc_if.c **** 
 269:Src/usbd_cdc_if.c ****   default:
 270:Src/usbd_cdc_if.c ****     break;
 271:Src/usbd_cdc_if.c ****   }
 272:Src/usbd_cdc_if.c **** 
 273:Src/usbd_cdc_if.c ****   return (USBD_OK);
 274:Src/usbd_cdc_if.c ****   /* USER CODE END 5 */
 275:Src/usbd_cdc_if.c **** }
  51              		.loc 1 275 0
  52 0000 0020     		movs	r0, #0
  53              	.LVL1:
  54 0002 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE68:
  58              		.section	.text.CDC_Receive_FS,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	CDC_Receive_FS:
  66              	.LFB69:
 276:Src/usbd_cdc_if.c **** 
 277:Src/usbd_cdc_if.c **** /**
 278:Src/usbd_cdc_if.c ****   * @brief  Data received over USB OUT endpoint are sent over CDC interface
 279:Src/usbd_cdc_if.c ****   *         through this function.
 280:Src/usbd_cdc_if.c ****   *
 281:Src/usbd_cdc_if.c ****   *         @note
ARM GAS  /tmp/cc9Epf8G.s 			page 7


 282:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint
 283:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
 284:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result
 285:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 286:Src/usbd_cdc_if.c ****   *
 287:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 288:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 289:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 290:Src/usbd_cdc_if.c ****   */
 291:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
 292:Src/usbd_cdc_if.c **** {
  67              		.loc 1 292 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              	.LVL2:
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
 293:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 294:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
  77              		.loc 1 294 0
  78 0002 054C     		ldr	r4, .L5
  79 0004 0146     		mov	r1, r0
  80              	.LVL3:
  81 0006 2046     		mov	r0, r4
  82              	.LVL4:
  83 0008 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
  84              	.LVL5:
 295:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
  85              		.loc 1 295 0
  86 000c 2046     		mov	r0, r4
  87 000e FFF7FEFF 		bl	USBD_CDC_ReceivePacket
  88              	.LVL6:
 296:Src/usbd_cdc_if.c ****   return (USBD_OK);
 297:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 298:Src/usbd_cdc_if.c **** }
  89              		.loc 1 298 0
  90 0012 0020     		movs	r0, #0
  91 0014 10BD     		pop	{r4, pc}
  92              	.L6:
  93 0016 00BF     		.align	2
  94              	.L5:
  95 0018 00000000 		.word	hUsbDeviceFS
  96              		.cfi_endproc
  97              	.LFE69:
  99              		.section	.text.CDC_Init_FS,"ax",%progbits
 100              		.align	1
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu softvfp
 106              	CDC_Init_FS:
 107              	.LFB66:
 184:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
ARM GAS  /tmp/cc9Epf8G.s 			page 8


 108              		.loc 1 184 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 187:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 117              		.loc 1 187 0
 118 0002 064C     		ldr	r4, .L9
 119 0004 0022     		movs	r2, #0
 120 0006 0649     		ldr	r1, .L9+4
 121 0008 2046     		mov	r0, r4
 122 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 123              	.LVL7:
 188:Src/usbd_cdc_if.c ****   return (USBD_OK);
 124              		.loc 1 188 0
 125 000e 0549     		ldr	r1, .L9+8
 126 0010 2046     		mov	r0, r4
 127 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 128              	.LVL8:
 191:Src/usbd_cdc_if.c **** 
 129              		.loc 1 191 0
 130 0016 0020     		movs	r0, #0
 131 0018 10BD     		pop	{r4, pc}
 132              	.L10:
 133 001a 00BF     		.align	2
 134              	.L9:
 135 001c 00000000 		.word	hUsbDeviceFS
 136 0020 00000000 		.word	UserTxBufferFS
 137 0024 00000000 		.word	UserRxBufferFS
 138              		.cfi_endproc
 139              	.LFE66:
 141              		.section	.text.CDC_Transmit_FS,"ax",%progbits
 142              		.align	1
 143              		.global	CDC_Transmit_FS
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu softvfp
 149              	CDC_Transmit_FS:
 150              	.LFB70:
 299:Src/usbd_cdc_if.c **** 
 300:Src/usbd_cdc_if.c **** /**
 301:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_FS
 302:Src/usbd_cdc_if.c ****   *         Data to send over USB IN endpoint are sent over CDC interface
 303:Src/usbd_cdc_if.c ****   *         through this function.
 304:Src/usbd_cdc_if.c ****   *         @note
 305:Src/usbd_cdc_if.c ****   *
 306:Src/usbd_cdc_if.c ****   *
 307:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be sent
 308:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be sent (in bytes)
 309:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 310:Src/usbd_cdc_if.c ****   */
 311:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
ARM GAS  /tmp/cc9Epf8G.s 			page 9


 312:Src/usbd_cdc_if.c **** {
 151              		.loc 1 312 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL9:
 313:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 314:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */
 315:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 156              		.loc 1 315 0
 157 0000 094B     		ldr	r3, .L19
 158 0002 D3F81832 		ldr	r3, [r3, #536]
 159              	.LVL10:
 316:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 160              		.loc 1 316 0
 161 0006 D3F81432 		ldr	r3, [r3, #532]
 162              	.LVL11:
 163 000a 0BB1     		cbz	r3, .L18
 317:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 164              		.loc 1 317 0
 165 000c 0120     		movs	r0, #1
 166              	.LVL12:
 318:Src/usbd_cdc_if.c ****   }
 319:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 320:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 321:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 322:Src/usbd_cdc_if.c ****   return result;
 323:Src/usbd_cdc_if.c **** }
 167              		.loc 1 323 0
 168 000e 7047     		bx	lr
 169              	.LVL13:
 170              	.L18:
 312:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 171              		.loc 1 312 0
 172 0010 10B5     		push	{r4, lr}
 173              	.LCFI2:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
 177 0012 0A46     		mov	r2, r1
 178 0014 0146     		mov	r1, r0
 179              	.LVL14:
 319:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 180              		.loc 1 319 0
 181 0016 044C     		ldr	r4, .L19
 182              	.LVL15:
 183 0018 2046     		mov	r0, r4
 184              	.LVL16:
 185 001a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 186              	.LVL17:
 320:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 187              		.loc 1 320 0
 188 001e 2046     		mov	r0, r4
 189 0020 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 190              	.LVL18:
 191              		.loc 1 323 0
 192 0024 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc9Epf8G.s 			page 10


 193              	.L20:
 194 0026 00BF     		.align	2
 195              	.L19:
 196 0028 00000000 		.word	hUsbDeviceFS
 197              		.cfi_endproc
 198              	.LFE70:
 200              		.global	USBD_Interface_fops_FS
 201              		.comm	UserTxBufferFS,1000,4
 202              		.comm	UserRxBufferFS,1000,4
 203              		.section	.data.USBD_Interface_fops_FS,"aw",%progbits
 204              		.align	2
 207              	USBD_Interface_fops_FS:
 208 0000 00000000 		.word	CDC_Init_FS
 209 0004 00000000 		.word	CDC_DeInit_FS
 210 0008 00000000 		.word	CDC_Control_FS
 211 000c 00000000 		.word	CDC_Receive_FS
 212              		.text
 213              	.Letext0:
 214              		.file 2 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default
 215              		.file 3 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 216              		.file 4 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 217              		.file 5 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/st
 218              		.file 6 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 219              		.file 7 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 220              		.file 8 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 221              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 222              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 223              		.file 11 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 224              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 225              		.file 13 "Inc/usbd_cdc_if.h"
ARM GAS  /tmp/cc9Epf8G.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
     /tmp/cc9Epf8G.s:16     .text.CDC_DeInit_FS:0000000000000000 $t
     /tmp/cc9Epf8G.s:22     .text.CDC_DeInit_FS:0000000000000000 CDC_DeInit_FS
     /tmp/cc9Epf8G.s:37     .text.CDC_Control_FS:0000000000000000 $t
     /tmp/cc9Epf8G.s:43     .text.CDC_Control_FS:0000000000000000 CDC_Control_FS
     /tmp/cc9Epf8G.s:59     .text.CDC_Receive_FS:0000000000000000 $t
     /tmp/cc9Epf8G.s:65     .text.CDC_Receive_FS:0000000000000000 CDC_Receive_FS
     /tmp/cc9Epf8G.s:95     .text.CDC_Receive_FS:0000000000000018 $d
     /tmp/cc9Epf8G.s:100    .text.CDC_Init_FS:0000000000000000 $t
     /tmp/cc9Epf8G.s:106    .text.CDC_Init_FS:0000000000000000 CDC_Init_FS
     /tmp/cc9Epf8G.s:135    .text.CDC_Init_FS:000000000000001c $d
                            *COM*:00000000000003e8 UserTxBufferFS
                            *COM*:00000000000003e8 UserRxBufferFS
     /tmp/cc9Epf8G.s:142    .text.CDC_Transmit_FS:0000000000000000 $t
     /tmp/cc9Epf8G.s:149    .text.CDC_Transmit_FS:0000000000000000 CDC_Transmit_FS
     /tmp/cc9Epf8G.s:196    .text.CDC_Transmit_FS:0000000000000028 $d
     /tmp/cc9Epf8G.s:207    .data.USBD_Interface_fops_FS:0000000000000000 USBD_Interface_fops_FS
     /tmp/cc9Epf8G.s:204    .data.USBD_Interface_fops_FS:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_CDC_SetRxBuffer
USBD_CDC_ReceivePacket
hUsbDeviceFS
USBD_CDC_SetTxBuffer
USBD_CDC_TransmitPacket
